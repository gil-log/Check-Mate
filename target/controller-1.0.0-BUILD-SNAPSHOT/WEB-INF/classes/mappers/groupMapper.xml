<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="groupMapper">

	<insert id="GroupCreate"><!-- parameterType="com.checkmate.vo.GroupVO"  -->
	    INSERT INTO C_Group(   G_NO 
	   					       , U_ID
	   					       , G_NAME
	   					       , G_FLAG
	   					       , U_POINT
	   					       , G_SOCKET
	   					       )
	                  VALUES(    G_NO_SEQ.NEXTVAL
	                 		   , #{u_id}
	                 		   , #{g_name}
	                 		   , 1
	                 		   , #{u_point}
	                 		   , 0
	                 		   )
    </insert>
		
	<select id="GroupList" resultType="com.checkmate.vo.GroupVO" parameterType="com.checkmate.vo.GroupVO">
      SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
      FROM C_GROUP
      WHERE U_id = #{u_id} AND G_FLAG IN(0, 1)
      ORDER BY G_NO DESC
	</select>
	
	<select id="groupMemberList" resultType="com.checkmate.vo.GroupVO" parameterType="com.checkmate.vo.GroupVO">
      SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
      FROM C_GROUP
      WHERE G_NO = #{g_no}
      AND (G_FLAG = 0 OR G_FLAG = 1)
      ORDER BY G_NO DESC
	</select>
	
	<select id="GroupListCount" resultType="int" parameterType="com.checkmate.vo.GroupVO">
      SELECT COUNT(*)
      FROM(
      SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
      FROM C_GROUP
      WHERE U_id = #{u_id})
	</select>
	
	<select id="findMaster" resultType="com.checkmate.vo.GroupVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT G_NO, U_ID, G_FLAG, G_NAME
		FROM C_GROUP
		WHERE G_NO = #{g_no} AND G_FLAG = 1
	</select>

	<update id="userPoint" parameterType="com.checkmate.vo.GroupPointVO">
		UPDATE C_GROUP SET
		U_POINT = #{u_point}
		WHERE G_NO = #{g_no} AND U_ID = #{u_id} AND G_FLAG = #{g_flag}
	</update>
	
	<!-- 선택한 그룹 가져오기 -->
	<select id="groupRead" resultType="com.checkmate.vo.GroupVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
		FROM C_GROUP
		WHERE G_NO = #{g_no} AND U_ID = #{u_id}
	</select>
	
	<!-- 그룹에 인원추가  -->
	<insert id="userPlus" parameterType="com.checkmate.vo.GroupVO">
	    INSERT INTO C_Group(   G_NO 
	   					       , U_ID
	   					       , G_NAME
	   					       , G_FLAG
	   					       , U_POINT
	   					       , G_SOCKET
	   					       )
	                  VALUES(    #{g_no}
	                 		   , #{u_id}
	                 		   , #{g_name}
	                 		   , #{g_flag}
	                 		   , #{u_point}
	                 		   , 0
	                 		   )
    </insert>
    
    <update id="userPlusMailAuth" parameterType="com.checkmate.vo.GroupVO">
    	UPDATE C_GROUP SET
    	G_FLAG = 0
    	WHERE G_FLAG = #{g_flag}
    </update>
	
	<!-- 그룹에서 3등까지 랭커 찾기 -->
	<select id="findTopRankList" resultType="com.checkmate.vo.GroupPointVO" parameterType="com.checkmate.vo.GroupVO">
	SELECT *
	FROM (
	SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
	FROM C_GROUP
	WHERE G_NO = #{g_no} AND G_FLAG = 0
	ORDER BY U_POINT DESC
	)
	<![CDATA[
	WHERE ROWNUM <= 3
	]]>
	</select>
	
	<!-- 내가 몇번째 순위인지 찾기 -->
	<select id="findMyRank" resultType="com.checkmate.vo.GroupPointVO" parameterType="com.checkmate.vo.GroupVO">
	SELECT G.r as rank, G.U_ID, G.U_POINT
	FROM (
	SELECT ROWNUM as r, U_ID, U_POINT
	FROM (
	SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT
	FROM C_GROUP
	WHERE G_NO = #{g_no} AND G_FLAG = 0
	ORDER BY U_POINT DESC
	)) G
	WHERE  G.U_ID = #{u_id}
	</select>

	<update id="socketConnection" parameterType="com.checkmate.vo.GroupVO">
		UPDATE C_GROUP SET
		G_SOCKET = #{g_socket}
		WHERE G_NO = #{g_no} AND U_ID = #{u_id} AND G_FLAG = #{g_flag}
	</update>
	
	<select id="socketConnectionList" resultType="com.checkmate.vo.GroupVO">
		SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT, G_SOCKET
		FROM C_GROUP
		WHERE G_NO = #{g_no} AND G_SOCKET != '0'
	</select>
	
	<!-- 초대현황  -->
	<select id="groupCheck" resultType="com.checkmate.vo.GroupVO" parameterType="com.checkmate.vo.GroupVO">
      SELECT G_NO, U_ID, G_NAME, G_FLAG, U_POINT, G_SOCKET
      FROM C_GROUP
      WHERE U_id = #{u_id} AND G_FLAG NOT IN(1, 0, 2, 3)
	</select>
	
	<!-- 초대 yes -->
	<update id="groupYes" parameterType="com.checkmate.vo.GroupVO">
	UPDATE C_GROUP
	SET G_FLAG=0
	WHERE U_id = #{u_id} AND G_NO = #{g_no}
	</update>
	
	<!-- 초대 No -->
	<delete id="groupNo" parameterType="com.checkmate.vo.GroupVO">
    	DELETE FROM C_GROUP 
    	WHERE U_id = #{u_id} AND G_NO = #{g_no}
    </delete>


	<!-- 그룹닫기 g_flag 2 == 폐쇄된 그룹 사용자  g_flag 3 == 폐쇄된 그룹 관리자-->
	<update id="groupLock" parameterType="com.checkmate.vo.GroupVO">
		update C_GROUP
		SET G_FLAG = #{g_flag} + 2
		WHERE G_NO = #{g_no} AND G_FLAG = #{g_flag}
	</update>












	<select id="attendList" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.AttendVO">
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no}
	</select>
	
	<!-- 관리자가 아닌 인원들이 출석체크를 눌렀을 경우 동작 -->
	<insert id="attendInsert" parameterType="com.checkmate.vo.AttendVO">
		INSERT INTO C_ATTEND (A_DATE, U_ID, G_NO, A_FLAG)
		VALUES(SYSDATE + #{a_date}/24/60, #{u_id}, #{g_no}, 0)	
	</insert>
	
	<!-- calendar 용 attend flag 별로 list 뽑기 -->
	<select id="attendListCalendar" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.AttendVO">
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no}
		AND    A_FLAG = #{a_flag}
	</select>
	
	<!-- calendar용 해당 그룹에 입력한 id에 해당하는 attend가 몇개인지를 받아온다. -->
	<select id="attendGnoUidCount" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT COUNT(*)
		FROM(
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no})
	</select>
</mapper>