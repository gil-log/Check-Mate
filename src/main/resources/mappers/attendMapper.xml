<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="attendMapper">

	<!-- 출석현황을 불러오는 경우  -->
	<select id="attendList" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT A_DATE, G_NO, U_ID, A_FLAG, A_DEADLINE
		FROM   C_ATTEND
		WHERE  G_NO = #{g_no}
		AND    U_ID = #{u_id}
		ORDER BY A_DATE ASC
	</select>
	
	<!-- 관리자가 출석생성하는 경우-->
	<insert id="attendMake" parameterType="com.checkmate.vo.AttendVO">
		INSERT INTO C_ATTEND (A_DATE, U_ID, G_NO, A_FLAG, A_DEADLINE)
		VALUES(SYSDATE, #{u_id}, #{g_no}, 0, SYSDATE + #{a_deadLine}/24/60)	
	</insert>
	
	<!-- 추가된 출석을 불러오는 경우  -->
	<select id="attendLast" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT ROWNUM, A.A_FLAG, A.A_DATE, A.U_ID, A.G_NO, A.A_DEADLINE
		FROM ( SELECT  A_DATE, G_NO, U_ID, A_FLAG, A_DEADLINE
      		   FROM    C_ATTEND
       		   WHERE   U_ID = #{u_id}
       		   AND 	   G_NO = #{g_no}
       		   ORDER BY A_DATE DESC) A
		WHERE  ROWNUM = 1
	</select>
	
	<!-- 출석가능 시간이 지났을 때 결석처리하는 부분 -->
	<update id="attendClose" parameterType = "com.checkmate.vo.AttendVO">
		Update C_ATTEND
		SET    A_FLAG = 3
		WHERE  A_DATE = TO_DATE(#{a_date},'YYYY-MM-DD HH24:MI:SS')
		AND	   U_ID = #{u_id}
		AND	   G_NO = #{g_no}
		AND	   A_FLAG = 0
	</update>

	<!-- 제일 먼저 시간 확인 후 출석상태 update -->
	<update id="attendUpdate" parameterType = "com.checkmate.vo.GroupVO">
		<![CDATA[
		Update C_ATTEND
		SET    A_FLAG = 3
		WHERE  G_NO = #{g_no}
		AND    A_FLAG = 0
		AND	   A_DEADLINE < SYSDATE
		]]>
	</update>
	
	<!-- 출석 click 한 경우 -->
	<update id="attendClick" parameterType = "com.checkmate.vo.AttendVO">
		<![CDATA[
		Update C_ATTEND
		SET    A_FLAG = 1
		WHERE  U_ID = #{u_id}
		AND	   G_NO = #{g_no}
		AND    A_DEADLINE = TO_DATE(#{a_deadLine},'YYYY-MM-DD HH24:MI:SS')
		AND	   A_DEADLINE > SYSDATE
		]]>
	</update>
	
	<!-- 선택한 출석정보 불러오기  -->
	<select id="attendSelect" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.AttendVO">
		SELECT *
		FROM   C_ATTEND  
		WHERE  U_ID = #{u_id}
 		AND    G_NO = #{g_no}
		AND	   A_DEADLINE = TO_DATE(#{a_deadLine},'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 출석관리리스트를 불러오는 경우  -->
	<select id="attendDetail" resultType="com.checkmate.vo.AttendListVO" parameterType="com.checkmate.vo.GroupVO">
		SELECT A.A_DATE, A.G_NO, A.U_ID, A.A_FLAG, A.A_DEADLINE, U.U_NAME
		FROM   C_ATTEND A, C_USER U, C_GROUP G
		WHERE  A.G_NO =  #{g_no}
		AND    A.U_ID = U.U_ID
		AND    A.G_NO = G.G_NO
		AND    G.U_ID = U.U_ID
		AND    G.G_FLAG = 0
		AND	   A.A_DATE = TO_DATE(#{a_date},'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 관리자가 출석현황을 수정한 경우 -->
	<update id="attendManage" parameterType="com.checkmate.vo.AttendVO">
		Update C_ATTEND
		SET    A_FLAG = #{a_flag}
		WHERE  U_ID = #{u_id}
		AND	   G_NO = #{g_no}
		AND    A_DATE = TO_DATE(#{a_date},'YYYY-MM-DD HH24:MI:SS')
	</update>
	
	
	
	<!-- calendar 용 attend flag 별로 list 뽑기 -->
	<select id="attendListCalendar" resultType="com.checkmate.vo.AttendVO" parameterType="com.checkmate.vo.AttendVO">
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no}
		AND    A_FLAG = #{a_flag}
	</select>
	
	<!-- calendar용 관리자가 만든 attend가 몇개인지를 받아온다. -->
	<select id="attendMasterCount" resultType="int" parameterType="com.checkmate.vo.GroupVO">
		SELECT COUNT(*)
		FROM(
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no})
	</select>
	
	<!-- calendar용 해당 그룹에 입력한 id에 해당하는 attend가 몇개인지를 받아온다. -->
	<select id="attendGnoUidCount" resultType="int" parameterType="com.checkmate.vo.AttendVO">
		SELECT COUNT(*)
		FROM(
		SELECT A_DATE, G_NO, U_ID, A_FLAG
		FROM   C_ATTEND
		WHERE  U_id = #{u_id}
		AND    G_NO = #{g_no}
		AND    A_FLAG = #{a_flag})
	</select>
</mapper>